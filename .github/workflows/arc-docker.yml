run-name: docker

on: workflow_dispatch

jobs:
  build:
    name: build dist
    permissions:
      contents: read
      id-token: write
    
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4.2.2
        with: 
          ref: main

      - name: setup-node
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 20
      - name: setup-pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 9

      - name: build dist
        run: |
          pnpm i
          npm run build

      - name: Build Docker Image
        run: |
          docker build -t ${{ vars.APP_NAME }}:latest .

      - name: Log in to ALIYUN
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
          password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
          registry: ${{ vars.REGISTRY_MIRROR }}

      - run: |
          echo "${{ vars.REGISTRY_MIRROR }}"

      - name: push docker image REGISTRY_MIRROR
        run: |
          docker tag ${{ vars.APP_NAME }} ${{ vars.REGISTRY_MIRROR }}/${{ vars.REGISTRY_NAMESPACE }}/${{ vars.APP_NAME }}:latest
          docker push ${{ vars.REGISTRY_MIRROR }}/${{ vars.REGISTRY_NAMESPACE }}/${{ vars.APP_NAME }}:latest

  deploy:
    name: deploy aliyun
    permissions:
      contents: read
      id-token: write
    
    needs: build
    steps:
      - name: run docker
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.ECS_HOST }}
          username: root
          password: ${{ secrets.ECS_PASSWORD }}
          port: 22
          script: |
            docker rm -f front-end-app
            docker rmi -f app
            docker pull ${{ vars.REGISTRY_MIRROR }}/${{ vars.REGISTRY_NAMESPACE }}/${{ vars.APP_NAME }}:latest
            docker tag ${{ vars.REGISTRY_MIRROR }}/${{ vars.REGISTRY_NAMESPACE }}/${{ vars.APP_NAME }}:latest app
            docker run -d --name front-end-app -p 80:80 app



        

    

